{
  "generated_at": "2025-08-27T00:17:20.671Z",
  "total_components": 13,
  "components": {
    "accordion": {
      "description": "Collapsible sections for organizing content",
      "componentName": "AccordionComponent",
      "file": "src/components/ai/accordion.tsx",
      "pattern": "ai(\n  'accordion',\n  'Collapsible sections for organizing content',\n  AccordionComponent\n)"
    },
    "card": {
      "description": "Structured content container with header, body, and footer sections",
      "componentName": "CardComponent",
      "file": "src/components/ai/card.tsx",
      "pattern": "ai(\n  'card',\n  'Structured content container with header, body, and footer sections',\n  CardComponent\n)"
    },
    "cards": {
      "description": "Interactive card grid with actions and MCP callback support",
      "componentName": "CardsComponent",
      "file": "src/components/ai/cards.tsx",
      "pattern": "ai(\n  'cards',\n  'Interactive card grid with actions and MCP callback support',\n  CardsComponent\n)"
    },
    "code": {
      "description": "Syntax-highlighted code snippets with optional titles",
      "componentName": "CodeComponent",
      "file": "src/components/ai/code.tsx",
      "pattern": "ai(\n  'code',\n  'Syntax-highlighted code snippets with optional titles',\n  CodeComponent\n)"
    },
    "gallery": {
      "description": "Display a grid of images with lightbox functionality",
      "componentName": "GalleryComponent",
      "file": "src/components/ai/gallery.tsx",
      "pattern": "ai(\n  'gallery',\n  'Display a grid of images with lightbox functionality',\n  GalleryComponent\n)"
    },
    "insights": {
      "description": "Highlight key insights and important information with categorized callouts",
      "componentName": "InsightsComponent",
      "file": "src/components/ai/insights.tsx",
      "pattern": "ai(\n  'insights',\n  'Highlight key insights and important information with categorized callouts',\n  InsightsComponent\n)"
    },
    "markdown": {
      "description": "Render markdown content with support for interactive elements",
      "componentName": "MarkdownComponent",
      "file": "src/components/ai/markdown.tsx",
      "pattern": "ai(\n  'markdown',\n  'Render markdown content with support for interactive elements',\n  MarkdownComponent\n)"
    },
    "reference": {
      "description": "Interactive inline references that expand to show detailed content",
      "componentName": "ReferenceComponent",
      "file": "src/components/ai/reference.tsx",
      "pattern": "ai(\n  'reference',\n  'Interactive inline references that expand to show detailed content',\n  ReferenceComponent\n)"
    },
    "suggestions": {
      "description": "Interactive suggestion buttons for continuing conversations",
      "componentName": "SuggestionsComponent",
      "file": "src/components/ai/suggestions.tsx",
      "pattern": "ai(\n  'suggestions',\n  'Interactive suggestion buttons for continuing conversations',\n  SuggestionsComponent\n)"
    },
    "table": {
      "description": "Display structured data in a comparison table format",
      "componentName": "TableComponent",
      "file": "src/components/ai/table.tsx",
      "pattern": "ai(\n  'table',\n  'Display structured data in a comparison table format',\n  TableComponent\n)"
    },
    "tabs": {
      "description": "Multi-view content container with tab navigation",
      "componentName": "TabsComponent",
      "file": "src/components/ai/tabs.tsx",
      "pattern": "ai(\n  'tabs',\n  'Multi-view content container with tab navigation',\n  TabsComponent\n)"
    },
    "timeline": {
      "description": "Display chronological events in a vertical timeline format",
      "componentName": "TimelineComponent",
      "file": "src/components/ai/timeline.tsx",
      "pattern": "ai(\n  'timeline',\n  'Display chronological events in a vertical timeline format',\n  TimelineComponent\n)"
    },
    "tree": {
      "description": "Interactive decision tree with branching options",
      "componentName": "TreeComponent",
      "file": "src/components/ai/tree.tsx",
      "pattern": "ai(\n  'tree',\n  'Interactive decision tree with branching options',\n  TreeComponent\n)"
    }
  }
}